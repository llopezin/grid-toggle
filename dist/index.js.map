{"version":3,"sources":["assets/scripts/helpers/screenSizeHelpers.js","assets/scripts/helpers/common.js","assets/scripts/toogle-grid/gridIcon.js","assets/scripts/toogle-grid/setButtonsState.js","assets/scripts/toogle-grid/toggleGrid.js","assets/scripts/toogle-grid/addToggleGridButton.js","index.js"],"names":["isExtraSmallScreen","window","innerWidth","isMobile","onResize","breakpoint","cb","cbArg","breakPoint","initialDiffSign","Math","sign","addEventListener","currentDiffSign","toArray","list","slice","call","qs","query","parent","querySelector","document","qsa","querySelectorAll","toggleAttribute","elem","attr","gridIcon","setButtonsState","toggleButton","classList","remove","add","ariaPressed","toggleGrid","productList","toggle","addToggleGridButton","createElement","id","innerHTML","onclick","e","currentTarget","insertAdjacentElement","init"],"mappings":";AAsBC,aAtBM,SAASA,IACPC,OAAAA,OAAOC,YAAc,IAGvB,SAASC,IACPF,OAAAA,OAAOC,WAAa,IAGtB,SAASE,EAASC,EAAYC,EAAIC,GACnCC,IAAAA,EAAaH,EACbI,EAAkBC,KAAKC,KAAKV,OAAOC,WAAaM,GAEpDP,OAAOW,iBAAiB,SAAU,WAC5BC,IAAAA,EAAkBH,KAAKC,KAAKV,OAAOC,WAAaM,GACxBC,IAAoBI,IAI9CP,EAAGC,GACHE,EAAkBI,KAGvB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,QAAA,SAAA,EAAA,QAAA,SAAA;;ACEA,aAxBM,SAASC,EAAQC,GACf,MAAA,GAAGC,MAAMC,KAAKF,GAGhB,SAASG,EAAGC,EAAOC,GACpBA,OAAAA,EACKA,EAAOC,cAAcF,GAErBG,SAASD,cAAcF,GAI3B,SAASI,EAAIJ,EAAOC,GAMlBN,OAAAA,EAJPM,EACYA,EAAOI,iBAAiBL,GACxBG,SAASE,iBAAiBL,IAMjC,SAASM,EAAgBC,EAAMC,GACrB,UAAfD,EAAKC,GAAqBD,EAAKC,GAAQ,OAAWD,EAAKC,GAAQ,QAChE,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAA,QAAA,GAAA,EAAA,QAAA,IAAA,EAAA,QAAA,gBAAA;;AClBA,aANc,SAASC,IACtB,MAAA,mlBAKD,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EARD,IAAA,EAAA,QAAA,gCAEe,SAASC,EAAgBC,IAElCA,EAAAA,EAAAA,sBAAAA,EAAaC,UAAUC,OAAO,UAC9BF,EAAaC,UAAUE,IAAI,UAE/BH,EAAaI,cAAe,EAA5B,EAAA;;ACKD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAZD,IAAA,EAAA,QAAA,gCACA,EAAA,QAAA,qBAEe,SAASC,EAAWL,GAC7BM,IAAAA,GAAc,EAAG,EAAA,IAAA,sBAGjBA,EAAAA,EAAAA,sBAAAA,EAAYL,UAAUM,OAAO,yBAC7BD,EAAYL,UAAUM,OAAO,yBAEjCP,EAAaC,UAAUM,OAAO,WACdP,EAAAA,EAAAA,iBAAAA,EAAc;;ACe/B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EA1BD,IAAA,EAAA,QAAA,gCACA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,iBAsBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApBc,SAASQ,IAClB,IAAC,EAAL,EAAA,YAAI,CAEAR,IAAAA,EAAeR,SAASiB,cAAc,UAE1CT,EAAaU,GAAK,cAClBV,EAAaW,UAAe,GAAA,QAAA,EAA5B,EAAA,WAN4C,6DAO5CX,EAAaY,QAAU,SAACC,IACXA,EAAAA,EAAAA,SAAAA,EAAEC,iBAKCd,EAAAA,EAAAA,SAAAA,IAGPtB,EAAAA,EAAAA,UADQ,IACIqB,EAArB,QAAsCC,IAEX,EAAG,EAAA,IAAA,kBACTe,sBAAsB,aAAcf;;;;AClBvD,aAPJ,IAAA,EAAA,EAAA,QAAA,qDAOI,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAJJ,SAASgB,KAAO,EAAA,EAAA,WAFhB,QAAA,6BAMAA","file":"index.js","sourceRoot":"..\\src","sourcesContent":["export function isExtraSmallScreen() {\r\n  return window.innerWidth <= 478;\r\n}\r\n\r\nexport function isMobile() {\r\n  return window.innerWidth < 768;\r\n}\r\n\r\nexport function onResize(breakpoint, cb, cbArg) {\r\n  let breakPoint = breakpoint;\r\n  let initialDiffSign = Math.sign(window.innerWidth - breakPoint);\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    let currentDiffSign = Math.sign(window.innerWidth - breakPoint);\r\n    let resizedPastBreakpoint = initialDiffSign !== currentDiffSign;\r\n\r\n    //breakpoint change\r\n    if (resizedPastBreakpoint) {\r\n      cb(cbArg);\r\n      initialDiffSign = currentDiffSign;\r\n    }\r\n  });\r\n}\r\n","export function toArray(list) {\r\n  return [].slice.call(list);\r\n}\r\n\r\nexport function qs(query, parent) {\r\n  if (parent) {\r\n    return parent.querySelector(query);\r\n  } else {\r\n    return document.querySelector(query);\r\n  }\r\n}\r\n\r\nexport function qsa(query, parent) {\r\n  let list;\r\n  parent\r\n    ? (list = parent.querySelectorAll(query))\r\n    : (list = document.querySelectorAll(query));\r\n\r\n  return toArray(list);\r\n}\r\n\r\n//toggle attribute method alternative, IE compatible\r\nexport function toggleAttribute(elem, attr) {\r\n  elem[attr] === \"false\" ? (elem[attr] = \"true\") : (elem[attr] = \"false\");\r\n}\r\n","export default function gridIcon() {\r\n  return `<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\r\n    <title>grid</title>\r\n    <path d=\"M3 2c-0.552 0-1 0.448-1 1v7c0 0.552 0.448 1 1 1h7c0.552 0 1-0.448 1-1v-7c0-0.552-0.448-1-1-1zM4 4h5v5h-5zM14 2c-0.552 0-1 0.448-1 1v7c0 0.552 0.448 1 1 1h7c0.552 0 1-0.448 1-1v-7c0-0.552-0.448-1-1-1zM15 4h5v5h-5zM14 13c-0.552 0-1 0.448-1 1v7c0 0.552 0.448 1 1 1h7c0.552 0 1-0.448 1-1v-7c0-0.552-0.448-1-1-1zM15 15h5v5h-5zM3 13c-0.552 0-1 0.448-1 1v7c0 0.552 0.448 1 1 1h7c0.552 0 1-0.448 1-1v-7c0-0.552-0.448-1-1-1zM4 15h5v5h-5z\"></path>\r\n    </svg>\r\n    `;\r\n}\r\n","import { isExtraSmallScreen } from \"../helpers/screenSizeHelpers\";\r\n\r\nexport default function setButtonsState(toggleButton) {\r\n  isExtraSmallScreen()\r\n    ? toggleButton.classList.remove(\"active\")\r\n    : toggleButton.classList.add(\"active\");\r\n\r\n  toggleButton.ariaPressed = !isExtraSmallScreen();\r\n}\r\n","import { isExtraSmallScreen } from \"../helpers/screenSizeHelpers\";\r\nimport { toggleAttribute, qs } from \"../helpers/common\";\r\n\r\nexport default function toggleGrid(toggleButton) {\r\n  let productList = qs(\".ais-InfiniteHits\");\r\n\r\n  isExtraSmallScreen()\r\n    ? productList.classList.toggle(\"secondary-display--xs\")\r\n    : productList.classList.toggle(\"secondary-display--sm\");\r\n\r\n  toggleButton.classList.toggle(\"active\");\r\n  toggleAttribute(toggleButton, \"ariaPressed\");\r\n}\r\n","import { isMobile, onResize } from \"../helpers/screenSizeHelpers\";\r\nimport { qs } from \"../helpers/common\";\r\nimport gridIcon from \"./gridIcon\";\r\nimport setButtonsState from \"./setButtonsState\";\r\nimport toggleGrid from \"./toggleGrid\";\r\n\r\nexport default function addToggleGridButton() {\r\n  if (!isMobile()) return; //avoids adding button on non mobile devices\r\n\r\n  let toggleButton = document.createElement(\"button\");\r\n\r\n  toggleButton.id = \"grid-toggle\";\r\n  toggleButton.innerHTML = `${gridIcon()} <span class=\"sr-only\">Change product list display</span>`; //.sr-only - screen reader only content\r\n  toggleButton.onclick = (e) => {\r\n    toggleGrid(e.currentTarget);\r\n  };\r\n\r\n  //Sets buttons classes and aria attibutes depending\r\n  //currents device default display\r\n  setButtonsState(toggleButton);\r\n\r\n  let breakPoint = 480; //xs <=> sm screen break point\r\n  onResize(breakPoint, setButtonsState, toggleButton); // breakpoint, callback, callback argument\r\n\r\n  let controllersContainer = qs(\".algolia-infos\");\r\n  controllersContainer.insertAdjacentElement(\"afterbegin\", toggleButton);\r\n}\r\n","import addToggleGridButton from \"./assets/scripts/toogle-grid/addToggleGridButton\";\r\nimport \"./assets/styles/main.scss\";\r\n\r\nfunction init() {\r\n  addToggleGridButton(); //toggle button adds secondary display class to grid parent - ./styles/toggle-gird/secondary-display\r\n}\r\n\r\ninit();\r\n"]}